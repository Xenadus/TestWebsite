@using Microsoft.AspNetCore.Http
@using TestWebsite.Enums
@using UAParser
@inject IHttpContextAccessor httpContextAccessor
@model TestWebsite.Models.Quote.QuoteViewModel

@{
    var context = httpContextAccessor.HttpContext;
    var userAgent = context.Request.Headers["User-Agent"].ToString();
    var uaParser = Parser.GetDefault();
    ClientInfo c = uaParser.Parse(userAgent);
}

<form asp-action="CreateQuote"
      asp-controller="QuoteForm"
      data-ajax="true" data-ajax-method="POST"
      data-ajax-success="createQuoteSuccess"
      id="createQuoteForm">

    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-2 form-group">
            @Html.LabelFor(x => x.Quote.Title)
            <br />
            <select class="custom-select" asp-for="Quote.Title" asp-items="Html.GetEnumSelectList<GeneralEnum.Title>()"></select>
        </div>
        <div class="col form-group">
            @Html.LabelFor(x => x.Quote.ContactName)
            @Html.TextBoxFor(x => x.Quote.ContactName, new { @class = "form-control" })
        </div>
        <div class="col form-group">
            @Html.LabelFor(x => x.Quote.EmailAddress)
            @Html.TextBoxFor(x => x.Quote.EmailAddress, new { @class = "form-control", @type = "email" })
        </div>
    </div>
    <div class="row">
        <div class="col form-group">
            @Html.LabelFor(x => x.Quote.TotalSize)
            @Html.TextBoxFor(x => x.Quote.TotalSize, new { @class = "form-control", @type = "number", @step = "any" })
        </div>
        <div class="col form-group">
            @Html.LabelFor(x => x.Quote.TotalRebuildCost)
            @Html.TextBoxFor(x => x.Quote.TotalRebuildCost, new { @class = "form-control", @type = "number", @step = "0.10" })
        </div>
    </div>
    <div class="row">
        <div class="col-3 form-group">
            @Html.Label("Is Flat Roof cover needed?")
            <br />
            @Html.CheckBoxFor(x => x.Quote.IsFlatRoofCover, new {@id = "flatroofChkbox"})
        </div>
        <div class="col form-group invisible" id="flatRoofTextBox">
            @Html.LabelFor(x => x.Quote.FlatRoofCover)
            @Html.TextBoxFor(x => x.Quote.FlatRoofCover, new { @class = "form-control", @type = "number", @step = "any"})
        </div>
    </div>

    <button id="submitQuoteFormBtn" type="submit" class="btn btn-primary">Submit</button>
</form>

<script>
    const submitBtn = document.getElementById("submitQuoteFormBtn");
    const flatroofChkbox = document.getElementById("flatroofChkbox");
    const flatroofText = document.getElementById("flatRoofTextBox");

    var prettyUserAgent = '@(c.OS)' + ", " + '@(c.UA.Family)';

    submitBtn.addEventListener("click", disableBtn);
    flatroofChkbox.addEventListener("click", viewFlatRoofCoverTextBox);

    function disableBtn() {
      submitBtn.classList.add('pe-none');
    }

    function viewFlatRoofCoverTextBox() {
        if (flatroofChkbox.checked == true) {
           flatroofText.classList.remove('invisible');
        }
        else {
            flatroofText.classList.add('invisible');
        }
    }

    createQuoteSuccess = function (result) {
        if (!result.successful) {
            alert(result.error);
            submitBtn.classList.remove('pe-none');
            return;
        }

        alert("We have recieved your form, your reference is: \n" + result.reference + ".\n\n" + prettyUserAgent);

        submitBtn.classList.remove('pe-none');

        document.getElementById("createQuoteForm").reset();
    };
</script>